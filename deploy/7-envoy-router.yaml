apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: envoy-router
    app.kubernetes.io/part-of: ue4-on-eks
    app.kubernetes.io/version: 0.0.1
    version: 0.0.1
  name: envoy-router
  namespace: ue4
spec:
  ports:
  - name: http
    port: 80
    targetPort: 11000
  - name: api
    port: 8080
    targetPort: 12000
  selector:
    app: envoy-router
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: routing
    app.kubernetes.io/part-of: ue4-on-eks
    app.kubernetes.io/version: 0.0.1
    app: envoy-router
  name: envoy-router
  namespace: ue4
spec:
  selector:
    matchLabels:
      app: envoy-router
      app.kubernetes.io/component: routing
      app.kubernetes.io/part-of: ue4-on-eks
      app.kubernetes.io/version: 0.0.1
  template:
    metadata:
      labels:
        app: envoy-router
        app.kubernetes.io/component: routing
        app.kubernetes.io/part-of: ue4-on-eks
        app.kubernetes.io/version: 0.0.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app.pixel/envoy
                operator: In
                values:
                - "true"
      containers:
      - image: envoyproxy/envoy:v1.21.1
        imagePullPolicy: IfNotPresent
        name: envoy-router
        ports:
        - containerPort: 11000
          name: http
        - containerPort: 12000
          name: api
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
        volumeMounts:
         - mountPath: /etc/envoy
           name: config
      volumes:
      - configMap:
          name: envoy-routing-config
        name: config
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: envoy
    app.kubernetes.io/part-of: ue4-on-eks
    app.kubernetes.io/version: 0.0.1
  name: envoy-routing-config
  namespace: ue4
data:
  envoy.yaml: |-
    static_resources:
      listeners:
      - name: listener_0
        address:
           socket_address:
               protocol: TCP
               address: 0.0.0.0
               port_value: 11000
   

        filter_chains:
        - filters:
           - name: envoy.filters.network.http_connection_manager
             typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                upgrade_configs:
                  - upgrade_type: websocket
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                       "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                   name: local_route
                   virtual_hosts:
                     - name: local_service
                       domains: ["*"]
                       routes:
                         - match: { prefix: "/matchmaker" }
                           route:  
                            cluster: service_matchmaker
                         - match: { prefix: "/ws" }
                           route:  
                             cluster: service_matchmaker
                         - match: { prefix: "/" }
                           route:  
                             cluster: service_player
                http_filters:
                   - name: envoy.filters.http.router

      clusters:
       - name: service_matchmaker
         connect_timeout: 1s
         type: LOGICAL_DNS
         dns_lookup_family: V4_ONLY
         lb_policy: ROUND_ROBIN
         load_assignment:
            cluster_name: service_envoyproxy_io
            endpoints:
            - lb_endpoints:
               - endpoint:
                  address:
                      socket_address:
                         address: matchmaker
                         port_value: 3000
       - name: service_player
         connect_timeout: 1s
         type: LOGICAL_DNS
         dns_lookup_family: V4_ONLY
         lb_policy: ROUND_ROBIN
         load_assignment:
            cluster_name: service_envoyproxy_io
            endpoints:
            - lb_endpoints:
               - endpoint:
                  address:
                      socket_address:
                         address: player
                         port_value: 80
 