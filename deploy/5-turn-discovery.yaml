---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: turn
    app.kubernetes.io/part-of: ue4-on-eks
    app.kubernetes.io/version: 0.0.1
    app: turn-discovery
  name: turn-discovery
  namespace: ue4
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: turn
      app.kubernetes.io/part-of: ue4-on-eks
      app.kubernetes.io/version: 0.0.1
      app: turn-discovery
  template:
    metadata:
      labels:
        app: turn-discovery
        app.kubernetes.io/component: turn
        app.kubernetes.io/part-of: ue4-on-eks
        app.kubernetes.io/version: 0.0.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app.pixel/turn
                operator: In
                values:
                - "true"
      containers:
      # - args:
      #   - -ec
      #   - |
      #     cat - | tee /tmp/run.sh <<EOF
      #     # get available turn node ip addresses
      #     kubectl get node -l app.pixel/turn=true -o json | \
      #       jq -c -r '[.items[] | select(.spec.unschedulable != true) | .status.addresses[] | select(.type == "ExternalIP") | {ip: .address}]' \
      #       > /config/endpoints.json
      #     EOF
      #     chmod +x /tmp/run.sh

      #     while true; do
      #       /tmp/run.sh || true
      #       sleep 60
      #     done
      #   command:
      #   - /bin/sh
    
        
      - image: ghcr.io/stevensu1977/ue4-pixelstreaming/kubetools
        imagePullPolicy: Always
        name: aggregator
        resources:
          requests:
            cpu: 5m
        volumeMounts:
        - mountPath: /config
          name: shared
      - env:
        - name: PORT
          value: "3000"
        - name: ENDPOINT_FILE
          value: /config/endpoints.json
        - name: TURN_PORT
          value: "3478"
        - name: TURN_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: turn-secret
        - name: TURN_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: turn-secret
        image: ghcr.io/stevensu1977/ue4-pixelstreaming/turn-api
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: api
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 20
          periodSeconds: 30
        resources:
          limits:
            cpu: 40m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 16Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
        volumeMounts:
        - mountPath: /config
          name: shared
      serviceAccountName: turn-svc-account
      volumes:
      - emptyDir: {}
        name: shared
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: turn
    app.kubernetes.io/name: turn-discovery
    app.kubernetes.io/part-of: ue4-on-eks
    app.kubernetes.io/version: 0.0.1
    version: 0.0.1
  name: turn-discovery
  namespace: ue4
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: turn-discovery
  type: ClusterIP